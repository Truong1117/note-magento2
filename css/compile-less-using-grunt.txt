I.Adding themes to Grunt configuration
~ To compile .less files, add your theme to module.exports in the Grunt configuration, 
either in the default dev/tools/grunt/configs/themes.js or in the custom configuration file. For example:

1. Install node.js to any location on your machine.

2. Install the Grunt CLI globally. To do this, run the following command in a command prompt:

npm install -g grunt-cli

3. From the <Magento_root> directory, copy and paste the contents of the following files:

~ package.json.sample to package.json

~ Gruntfile.js.sample to Gruntfile.js

~ grunt-config.json.sample into grunt-config.json

4. Install (or refresh) the node.js project dependency, including Grunt, for your Magento instance. 
To do this, run the following commands in a command prompt:

~ cd <your_Magento_instance_directory>

~ npm install

~ npm update

5. Add your theme to Grunt configuration. To do this, in the dev/tools/grunt/configs/themes.js file, 
add your theme to module.exports like following:

/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

'use strict';

/**
 * Define Themes
 *
 * area: area, one of (frontend|adminhtml|doc),
 * name: theme name in format Vendor/theme-name,
 * locale: locale,
 * files: [
 * 'css/styles-m',
 * 'css/styles-l'
 * ],
 * dsl: dynamic stylesheet language (less|sass)
 *
 */
module.exports = {
    blank: {
        area: 'frontend',
        name: 'Magento/blank',
        locale: 'en_US',
        files: [
            'css/styles-m',
            'css/styles-l',
            'css/email',
            'css/email-inline'
        ],
        dsl: 'less'
    },
    luma: {
        area: 'frontend',
        name: 'Magento/luma',
        locale: 'en_US',
        files: [
            'css/styles-m',
            'css/styles-l'
        ],
        dsl: 'less'
    },
    training: {
        area: 'frontend',
        name: 'Commercers/Training',
        locale: 'de_DE',
        files: [
            'css/styles-m',
            'css/styles-l'
        ],
        dsl: 'less'
    },
    training_en: {
        area: 'frontend',
        name: 'Commercers/Training',
        locale: 'en_US',
        files: [
            'css/styles-m',
            'css/styles-l'
        ],
        dsl: 'less'
    },
    backend: {
        area: 'adminhtml',
        name: 'Magento/backend',
        locale: 'en_US',
        files: [
            'css/styles-old',
            'css/styles'
        ],
        dsl: 'less'
    }
};



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
II. Grunt commands

GRUNT TASK			ACTION

grunt clean	Removes the theme related static files in the pub/static and var directories.

grunt exec	Republishes symlinks to the source files to the pub/static/frontend/ directory. 
		Use grunt exec:<theme> to republish symlinks for a specific theme.

grunt less	Compiles CSS files using the symlinks published in the pub/static/frontend/ directory. 
		Use grunt less:<theme> to use the symlinks published for a specific theme.

grunt watch	Tracks the changes in the source files, recompiles .css files, and reloads the page in the browser.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
III. Use cases of tracking changes using Grunt

~ The following shows which Grunt tasks to use for debugging:

	~~ After you switch the compilation mode from client-side to server-side, run the exec command.

	~~ After you customize the content of any .less file, except the root source files, 
run the less task and reload the page.

	~~ After you customize the root source files or move the files included to the root files, 
run the exec command and reload the page.

	~~ After you run php bin/magento setup:upgrade, run exec command.

	~~ After you run the exec command, run the clear command to clear the Magento cache, 
then run the watch command. Running the commands in this order will ensure that any custom jQuery attributes 
like product sliders, banners, etc are loaded correctly.

~ If you have LiveReload installed, run the grunt watch command, and the flow is even simpler:

	~~ After you customize the content of any .less file, changes are applied and the page reloads 
automatically. No additional changes

	~~ After you customize the root source files or move the files included to the root files, 
run the clean and exec commands, which reloads the page in the browser.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~ The <magento-root>/lib/web/css/source/lib/variables directory contains LESS files that define 
values assigned to variables for many of the common elements in Magento.

~ To change or override any of these variables, simply create a file in <theme-dir>/web/css/source/_theme.less For example:












