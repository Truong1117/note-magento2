https://devdocs.magento.com/guides/v2.4/frontend-dev-guide/validations/custom-validation.html
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app/code/Commercers/BWare/etc/adminhtml/di.xml

<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
	<virtualType name="Magento\Catalog\Ui\DataProvider\Product\Form\Modifier\Pool">
        <arguments>
            <argument name="modifiers" xsi:type="array">
                <item name="modifySku" xsi:type="array">
                    <item name="class" xsi:type="string">Commercers\BWare\Ui\DataProvider\Product\Form\Modifier\Modifysku</item>
                    <item name="sortOrder" xsi:type="number">20</item>
                </item>
            </argument>
        </arguments>
    </virtualType>
</config>

~~~~~~~~~~~~~~~~~~~~
app/code/Commercers/BWare/Ui/DataProvide/Product/Form/Modifier/Modifysku.php

<?php
namespace Commercers\BWare\Ui\DataProvider\Product\Form\Modifier;

use Magento\Catalog\Ui\DataProvider\Product\Form\Modifier\AbstractModifier;

class Modifysku extends AbstractModifier
{
	public function modifyMeta(array $meta)
     {
    	$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
    	$scopeConfig = $objectManager->create('Magento\Framework\App\Config\ScopeConfigInterface');

          $enabled 	     = true;
          $prefix        = 'B-Ware-';
          $increment     = 1;
          $length 	     = 6;

	     if($enabled){
	    	$defaultSku = $this->_buildSku($prefix, $increment, $length);
	    	$meta['product-details']
	    			['children']
	    				['container_sku']
	    					['children']
	    						['sku']
	    							['arguments']
	    								['data']
	    									['config']
	    										['value'] = $defaultSku;
	     }
    	return $meta;
     }
     public function modifyData(array $data)
     {
          return $data;
     }
     private function _buildSku($_prefix, $_increment, $_length){
    	$skuToassign = '';
    	$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
    	/** @var \Magento\Catalog\Model\ResourceModel\Product\Collection $productCollection */
		$productCollection = $objectManager->create('Magento\Catalog\Model\ResourceModel\Product\Collection');
		/** Apply filters here */
		$collection = $productCollection
						->addAttributeToFilter(
      						[
       							['attribute' => 'sku', 'like' => $_prefix.'%']
      						]
      					)
      					->setOrder('entity_id','DESC')
      					->setPageSize(1)
		            	->load();


		if($collection->getSize() > 0){

			$product  		= 	$collection->getFirstItem();
			$lastMacthedSku 	=	$product->getSku();
			$findLastIncrement 	=    (int) preg_replace('/[^0-9]/', '', $lastMacthedSku);
			$nextInrement   	= 	++$findLastIncrement;
			$incrementLength 	= 	strlen($findLastIncrement) + strlen($_prefix);//
			$skuToassign 		=	$_prefix.str_pad(
                                             $skuToassign,
                                             ($_length - $incrementLength ),
                                             0
                                        ).$nextInrement;
		}else{
			$subtractLength     = strlen($_prefix) + strlen($_increment);
			$skuToassign        = $_prefix.str_pad(
                                             $skuToassign,
                                             ($_length - $subtractLength ),
                                             0
                                        ).$_increment;
		}
		return $skuToassign;
    }
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
